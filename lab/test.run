; ModuleID = 'test.cpp'
source_filename = "test.cpp"

@.str.0 = private unnamed_addr constant [2 x i8]* c"\0A\00"

declare void @mx__print(i8* %1_str)
declare void @mx__println(i8* %2_str)
declare void @mx__printInt(i32 %3_n)
declare void @mx__printlnInt(i32 %4_n)
declare i8* @mx__getString()
declare i32 @mx__getInt()
declare i8* @mx__toString(i32 %5_i)
declare i8* @mx__malloc(i32 %6_size)
declare i8* @mx__string_add(i8* %7_a, i8* %8_b)
declare i1 @mx__string_lt(i8* %9_a, i8* %10_b)
declare i1 @mx__string_gt(i8* %11_a, i8* %12_b)
declare i1 @mx__string_le(i8* %13_a, i8* %14_b)
declare i1 @mx__string_ge(i8* %15_a, i8* %16_b)
declare i1 @mx__string_eq(i8* %17_a, i8* %18_b)
declare i1 @mx__string_ne(i8* %19_a, i8* %20_b)
declare i32 @mx__string_length(i8* %21_this)
declare i8* @mx__string_substring(i8* %22_this, i32 %23_left, i32 %24_right)
declare i32 @mx__string_parseInt(i8* %25_this)
declare i32 @mx__string_ord(i8* %26_this, i32 %27_pos)

define void @mx__init() {
entry1:
	ret void

}

define i32 @main() {
entry3:
	call void @mx__init()
	%36_mallocPointer = call i8* @mx__malloc(i32 11208)
	%39_mallocInt = bitcast i8* %36_mallocPointer to i32*
	store i32 2801, i32* %39_mallocInt
	%40_arrayBeginInt = getelementptr i32, i32* %39_mallocInt, i32 1
	%41_arrayBegin = bitcast i32* %40_arrayBeginInt to i32*
	br label condBlock5

condBlock5:
	%120_b.phi = phi i32 [ 0, entry3 ], [ %55_result, bodyBlock6 ]
	%45_result = sub i32 %120_b.phi, 2800
	%46_result = icmp ne i32 %45_result, 0
	br i1 %46_result, label bodyBlock6, label mergeBlock8

bodyBlock6:
	%49_element$addr = getelementptr i32, i32* %41_arrayBegin, i32 %120_b.phi
	store i32 2000, i32* %49_element$addr
	%55_result = add i32 %120_b.phi, 1
	br label condBlock5

mergeBlock8:
	br label condBlock9

condBlock9:
	%133_e.phi = phi i32 [ 0, mergeBlock8 ], [ %115_result, mergeBlock20 ]
	%132_c.phi = phi i32 [ 2800, mergeBlock8 ], [ %103_result, mergeBlock20 ]
	%125_b.phi = phi i32 [ %120_b.phi, mergeBlock8 ], [ %131_b.phi, mergeBlock20 ]
	%122_g.phi = phi i32 [ 0, mergeBlock8 ], [ %130_g.phi, mergeBlock20 ]
	%121_d.phi = phi i32 [ 0, mergeBlock8 ], [ %129_d.phi, mergeBlock20 ]
	br i1 true, label bodyBlock10, label mergeBlock12

bodyBlock10:
	%60_result = mul i32 %132_c.phi, 2
	%63_result = icmp eq i32 %60_result, 0
	br i1 %63_result, label ifThenBlock13, label ifElseBlock14

ifThenBlock13:
	br label mergeBlock12

ifElseBlock14:
	br label condBlock17

condBlock17:
	%128_b.phi = phi i32 [ %132_c.phi, ifElseBlock14 ], [ %94_result, ifElseBlock22 ]
	%127_g.phi = phi i32 [ %60_result, ifElseBlock14 ], [ %92_result, ifElseBlock22 ]
	%126_d.phi = phi i32 [ 0, ifElseBlock14 ], [ %99_result, ifElseBlock22 ]
	br i1 true, label bodyBlock18, label mergeBlock20

bodyBlock18:
	%71_element$addr = getelementptr i32, i32* %41_arrayBegin, i32 %128_b.phi
	%72_element = load i32, i32* %71_element$addr
	%74_result = mul i32 %72_element, 10000
	%75_result = add i32 %126_d.phi, %74_result
	%79_element$addr = getelementptr i32, i32* %41_arrayBegin, i32 %128_b.phi
	%83_result = sub i32 %127_g.phi, 1
	%84_result = srem i32 %75_result, %83_result
	store i32 %84_result, i32* %79_element$addr
	%89_result = sdiv i32 %75_result, %83_result
	%92_result = sub i32 %83_result, 1
	%94_result = sub i32 %128_b.phi, 1
	%95_result = icmp eq i32 %94_result, 0
	br i1 %95_result, label ifThenBlock21, label ifElseBlock22

ifThenBlock21:
	br label mergeBlock20

ifElseBlock22:
	%99_result = mul i32 %89_result, %94_result
	br label condBlock17

mergeBlock20:
	%131_b.phi = phi i32 [ %94_result, ifThenBlock21 ], [ %128_b.phi, condBlock17 ]
	%130_g.phi = phi i32 [ %92_result, ifThenBlock21 ], [ %127_g.phi, condBlock17 ]
	%129_d.phi = phi i32 [ %89_result, ifThenBlock21 ], [ %126_d.phi, condBlock17 ]
	%103_result = sub i32 %132_c.phi, 14
	%110_result = sdiv i32 %129_d.phi, 10000
	%111_result = add i32 %133_e.phi, %110_result
	%106_result = call i8* @mx__toString(i32 %111_result)
	%105_result = call void @mx__print(i8* %106_result)
	%115_result = srem i32 %129_d.phi, 10000
	br label condBlock9

mergeBlock12:
	%124_g.phi = phi i32 [ %60_result, ifThenBlock13 ], [ %122_g.phi, condBlock9 ]
	%123_d.phi = phi i32 [ 0, ifThenBlock13 ], [ %121_d.phi, condBlock9 ]
	%119_string = getelementptr [2 x i8], [2 x i8]* @.str.0, i32 0, i32 0
	%117_result = call void @mx__print(i8* %119_string)
	ret i32 0

}

