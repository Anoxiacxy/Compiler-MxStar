	.text

	.globl	main
	.p2align	2
	.type	main,@function
main:
.L0_0:
	mv	[v]ra.copy, ra
	mv	[v]s11.copy, s11
	mv	[v]s10.copy, s10
	mv	[v]s0.copy, s0
	mv	[v]s1.copy, s1
	mv	[v]s2.copy, s2
	mv	[v]s3.copy, s3
	mv	[v]s4.copy, s4
	mv	[v]s5.copy, s5
	mv	[v]s6.copy, s6
	mv	[v]s7.copy, s7
	mv	[v]s8.copy, s8
	mv	[v]s9.copy, s9
	call	mx__init
	addi	[v]const.int(4)1, zero, 4
	mv	a0, [v]const.int(4)1
	call	malloc
	mv	[v]i0, a0
	addi	[v]const.int(4)2, zero, 4
	mv	a0, [v]const.int(4)2
	call	malloc
	mv	[v]i1, a0
	addi	[v]const.int(4)3, zero, 4
	mv	a0, [v]const.int(4)3
	call	malloc
	mv	[v]returnValue$address2, a0
	sw	zero, 0([v]returnValue$address2)
	lui	[v]lui, %hi(N)
	lw	[v]variable3, %lo(N)([v]lui)
	call	mx__getInt
	mv	[v]result4, a0
	lui	[v]lui, %hi(N)
	sw	[v]result4, %lo(N)([v]lui)
	lui	[v]lui, %hi(check)
	lw	[v]variable5, %lo(check)([v]lui)
	lui	[v]lui, %hi(N)
	lw	[v]variable6, %lo(N)([v]lui)
	addi	[v]result7, [v]variable6, 5
	addi	[v]const.int(4)4, zero, 4
	mul	[v]contentSize8, [v]result7, [v]const.int(4)4
	addi	[v]totalByte9, [v]contentSize8, 4
	mv	a0, [v]totalByte9
	call	malloc
	mv	[v]mallocPointer10, a0
	mv	[v]mallocInt11, [v]mallocPointer10
	sw	[v]result7, 0([v]mallocInt11)
	addi	[v]arrayBeginInt12, [v]mallocInt11, 4
	mv	[v]arrayBegin13, [v]arrayBeginInt12
	lui	[v]lui, %hi(check)
	sw	[v]arrayBegin13, %lo(check)([v]lui)
	sw	zero, 0([v]i1)
	j	.L0_1
.L0_1:
	lw	[v]variable14, 0([v]i1)
	lui	[v]lui, %hi(N)
	lw	[v]variable15, %lo(N)([v]lui)
	slt	[v]icmp, [v]variable15, [v]variable14
	xori	[v]result16, [v]icmp, 1
	beqz	[v]result16, .L0_3
	j	.L0_2
.L0_2:
	lui	[v]lui, %hi(check)
	lw	[v]variable17, %lo(check)([v]lui)
	lw	[v]variable18, 0([v]i1)
	addi	[v]result19, [v]variable18, 1
	sw	[v]result19, 0([v]i1)
	slli	[v]array_offset, [v]variable18, 2
	add	[v]element$addr20, [v]variable17, [v]array_offset
	lb	[v]element21, 0([v]element$addr20)
	addi	[v]const.bool(true)5, zero, 1
	sb	[v]const.bool(true)5, 0([v]element$addr20)
	j	.L0_1
.L0_3:
	lui	[v]lui, %hi(N)
	lw	[v]variable22, %lo(N)([v]lui)
	addi	[v]result23, [v]variable22, 5
	addi	[v]const.int(4)6, zero, 4
	mul	[v]contentSize24, [v]result23, [v]const.int(4)6
	addi	[v]totalByte25, [v]contentSize24, 4
	mv	a0, [v]totalByte25
	call	malloc
	mv	[v]mallocPointer26, a0
	mv	[v]mallocInt27, [v]mallocPointer26
	sw	[v]result23, 0([v]mallocInt27)
	addi	[v]arrayBeginInt28, [v]mallocInt27, 4
	mv	[v]arrayBegin29, [v]arrayBeginInt28
	lui	[v]lui, %hi(N)
	lw	[v]variable30, %lo(N)([v]lui)
	addi	[v]result31, [v]variable30, 5
	addi	[v]const.int(4)7, zero, 4
	mul	[v]contentSize32, [v]result31, [v]const.int(4)7
	addi	[v]totalByte33, [v]contentSize32, 4
	mv	a0, [v]totalByte33
	call	malloc
	mv	[v]mallocPointer34, a0
	mv	[v]mallocInt35, [v]mallocPointer34
	sw	[v]result31, 0([v]mallocInt35)
	addi	[v]arrayBeginInt36, [v]mallocInt35, 4
	mv	[v]arrayBegin37, [v]arrayBeginInt36
	addi	[v]element$addr38, [v]arrayBegin29, 4
	lw	[v]element39, 0([v]element$addr38)
	addi	[v]const.int(1)8, zero, 1
	sw	[v]const.int(1)8, 0([v]element$addr38)
	lw	[v]variable40, 0([v]i1)
	addi	[v]const.int(2)9, zero, 2
	sw	[v]const.int(2)9, 0([v]i1)
	j	.L0_4
.L0_4:
	addi	[v]const.bool(true)10, zero, 1
	beqz	[v]const.bool(true)10, .L0_22
	j	.L0_5
.L0_5:
	lw	[v]variable41, 0([v]i1)
	lui	[v]lui, %hi(N)
	lw	[v]variable42, %lo(N)([v]lui)
	slt	[v]result43, [v]variable42, [v]variable41
	beqz	[v]result43, .L0_7
	j	.L0_6
.L0_6:
	j	.L0_22
.L0_7:
	lui	[v]lui, %hi(check)
	lw	[v]variable44, %lo(check)([v]lui)
	lw	[v]variable45, 0([v]i1)
	slli	[v]array_offset, [v]variable45, 2
	add	[v]element$addr46, [v]variable44, [v]array_offset
	lb	[v]element47, 0([v]element$addr46)
	beqz	[v]element47, .L0_9
	j	.L0_8
.L0_8:
	lui	[v]lui, %hi(M)
	lw	[v]variable48, %lo(M)([v]lui)
	addi	[v]result49, [v]variable48, 1
	lui	[v]lui, %hi(M)
	sw	[v]result49, %lo(M)([v]lui)
	slli	[v]array_offset, [v]result49, 2
	add	[v]element$addr50, [v]arrayBegin37, [v]array_offset
	lw	[v]element51, 0([v]element$addr50)
	lw	[v]variable52, 0([v]i1)
	sw	[v]variable52, 0([v]element$addr50)
	lw	[v]variable53, 0([v]i1)
	slli	[v]array_offset, [v]variable53, 2
	add	[v]element$addr54, [v]arrayBegin29, [v]array_offset
	lw	[v]element55, 0([v]element$addr54)
	lw	[v]variable56, 0([v]i1)
	addi	[v]result57, [v]variable56, -1
	sw	[v]result57, 0([v]element$addr54)
	j	.L0_10
.L0_9:
	j	.L0_10
.L0_10:
	lw	[v]variable58, 0([v]i1)
	sw	zero, 0([v]i0)
	lw	[v]variable59, 0([v]i0)
	addi	[v]const.int(1)11, zero, 1
	sw	[v]const.int(1)11, 0([v]i0)
	j	.L0_11
.L0_11:
	lw	[v]variable60, 0([v]i0)
	lui	[v]lui, %hi(M)
	lw	[v]variable61, %lo(M)([v]lui)
	slt	[v]icmp, [v]variable61, [v]variable60
	xori	[v]result62, [v]icmp, 1
	beqz	[v]result62, .L0_12
	j	.L0_13
.L0_12:
	addi	[v]result63, zero, 0
	j	.L0_14
.L0_13:
	lw	[v]variable64, 0([v]i0)
	slli	[v]array_offset, [v]variable64, 2
	add	[v]element$addr65, [v]arrayBegin37, [v]array_offset
	lw	[v]element66, 0([v]element$addr65)
	mul	[v]result67, [v]variable58, [v]element66
	lui	[v]lui, %hi(N)
	lw	[v]variable68, %lo(N)([v]lui)
	slt	[v]icmp, [v]variable68, [v]result67
	xori	[v]result69, [v]icmp, 1
	mv	[v]result63, [v]result69
	j	.L0_14
.L0_14:
	beqz	[v]result63, .L0_21
	j	.L0_15
.L0_15:
	lw	[v]variable70, 0([v]i0)
	slli	[v]array_offset, [v]variable70, 2
	add	[v]element$addr71, [v]arrayBegin37, [v]array_offset
	lw	[v]element72, 0([v]element$addr71)
	mul	[v]result73, [v]variable58, [v]element72
	lui	[v]lui, %hi(N)
	lw	[v]variable74, %lo(N)([v]lui)
	slt	[v]result75, [v]variable74, [v]result73
	beqz	[v]result75, .L0_17
	j	.L0_16
.L0_16:
	j	.L0_20
.L0_17:
	lui	[v]lui, %hi(check)
	lw	[v]variable76, %lo(check)([v]lui)
	slli	[v]array_offset, [v]result73, 2
	add	[v]element$addr77, [v]variable76, [v]array_offset
	lb	[v]element78, 0([v]element$addr77)
	sb	zero, 0([v]element$addr77)
	lw	[v]variable79, 0([v]i0)
	slli	[v]array_offset, [v]variable79, 2
	add	[v]element$addr80, [v]arrayBegin37, [v]array_offset
	lw	[v]element81, 0([v]element$addr80)
	rem	[v]result82, [v]variable58, [v]element81
	addi	[v]icmp, [v]result82, 0
	seqz	[v]result83, [v]icmp
	beqz	[v]result83, .L0_19
	j	.L0_18
.L0_18:
	slli	[v]array_offset, [v]result73, 2
	add	[v]element$addr84, [v]arrayBegin29, [v]array_offset
	lw	[v]element85, 0([v]element$addr84)
	slli	[v]array_offset, [v]variable58, 2
	add	[v]element$addr86, [v]arrayBegin29, [v]array_offset
	lw	[v]element87, 0([v]element$addr86)
	lw	[v]variable88, 0([v]i0)
	slli	[v]array_offset, [v]variable88, 2
	add	[v]element$addr89, [v]arrayBegin37, [v]array_offset
	lw	[v]element90, 0([v]element$addr89)
	mul	[v]result91, [v]element87, [v]element90
	sw	[v]result91, 0([v]element$addr84)
	j	.L0_21
.L0_19:
	lw	[v]variable92, 0([v]i0)
	slli	[v]array_offset, [v]variable92, 2
	add	[v]element$addr93, [v]arrayBegin37, [v]array_offset
	lw	[v]element94, 0([v]element$addr93)
	mul	[v]result95, [v]variable58, [v]element94
	slli	[v]array_offset, [v]result95, 2
	add	[v]element$addr96, [v]arrayBegin29, [v]array_offset
	lw	[v]element97, 0([v]element$addr96)
	slli	[v]array_offset, [v]variable58, 2
	add	[v]element$addr98, [v]arrayBegin29, [v]array_offset
	lw	[v]element99, 0([v]element$addr98)
	lw	[v]variable100, 0([v]i0)
	slli	[v]array_offset, [v]variable100, 2
	add	[v]element$addr101, [v]arrayBegin37, [v]array_offset
	lw	[v]element102, 0([v]element$addr101)
	addi	[v]result103, [v]element102, -1
	mul	[v]result104, [v]element99, [v]result103
	sw	[v]result104, 0([v]element$addr96)
	j	.L0_20
.L0_20:
	lw	[v]variable105, 0([v]i0)
	addi	[v]result106, [v]variable105, 1
	sw	[v]result106, 0([v]i0)
	j	.L0_11
.L0_21:
	slli	[v]array_offset, [v]variable58, 2
	add	[v]element$addr107, [v]arrayBegin29, [v]array_offset
	lw	[v]element108, 0([v]element$addr107)
	mv	a0, [v]element108
	call	mx__toString
	mv	[v]result109, a0
	mv	a0, [v]result109
	call	mx__println
	lw	[v]variable110, 0([v]i1)
	addi	[v]result111, [v]variable110, 1
	sw	[v]result111, 0([v]i1)
	j	.L0_4
.L0_22:
	sw	zero, 0([v]returnValue$address2)
	lw	[v]returnValue112, 0([v]returnValue$address2)
	mv	a0, [v]returnValue112
	mv	s11, [v]s11.copy
	mv	s10, [v]s10.copy
	mv	s0, [v]s0.copy
	mv	s1, [v]s1.copy
	mv	s2, [v]s2.copy
	mv	s3, [v]s3.copy
	mv	s4, [v]s4.copy
	mv	s5, [v]s5.copy
	mv	s6, [v]s6.copy
	mv	s7, [v]s7.copy
	mv	s8, [v]s8.copy
	mv	s9, [v]s9.copy
	mv	ra, [v]ra.copy
	ret
	.size	main, .-main
	.globl	mx__init
	.p2align	2
	.type	mx__init,@function
mx__init:
.L1_0:
	mv	[v]ra.copy, ra
	mv	[v]s11.copy, s11
	mv	[v]s10.copy, s10
	mv	[v]s0.copy, s0
	mv	[v]s1.copy, s1
	mv	[v]s2.copy, s2
	mv	[v]s3.copy, s3
	mv	[v]s4.copy, s4
	mv	[v]s5.copy, s5
	mv	[v]s6.copy, s6
	mv	[v]s7.copy, s7
	mv	[v]s8.copy, s8
	mv	[v]s9.copy, s9
	mv	s11, [v]s11.copy
	mv	s10, [v]s10.copy
	mv	s0, [v]s0.copy
	mv	s1, [v]s1.copy
	mv	s2, [v]s2.copy
	mv	s3, [v]s3.copy
	mv	s4, [v]s4.copy
	mv	s5, [v]s5.copy
	mv	s6, [v]s6.copy
	mv	s7, [v]s7.copy
	mv	s8, [v]s8.copy
	mv	s9, [v]s9.copy
	mv	ra, [v]ra.copy
	ret
	.size	mx__init, .-mx__init

	.section	.sdata,"aw",@progbits
	.global	check
	.p2align	2
	check:
	.word	0                       # 0
	.global	M
	.p2align	2
	M:
	.word	0                       # 0
	.global	N
	.p2align	2
	N:
	.word	0                       # 0
